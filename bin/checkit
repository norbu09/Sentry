#!/usr/bin/perl

use lib 'lib';
use strict;
use warnings;
use Sentry;
use Data::Dumper;
use Config::GitLike;

my $conf = 'sentry.conf';

my $c = Config::GitLike->new( confname => $conf );
$c->load;

my $checks = $c->get_regexp( key => 'check.*plugin' );

foreach my $path ( keys %{$checks} ) {

    my $mon = Sentry->new();
    if ( my @notify = $c->get_all( key => 'notify.plugin' ) ) {
        foreach my $plugin (@notify) {
            $mon->load_plugin( 'Backend::' . $plugin );
        }
    }
    if ( my @keys = $c->get_all( key => 'notify.Prowl.key' ) ) {
        $mon->prowl_apikeys(\@keys);
    }

    if ( my $socket = $c->get( key => 'notify.Collectd.socket' ) ) {
        $mon->collectd_socket($socket);
    }

    my @parts = split( /\./, $path );
    pop(@parts);
    print "testing " . $parts[1] . "...\n";
    my $opts = $c->get_regexp( key => join( '.', @parts ) );
    foreach my $ky ( keys %{$opts} ) {
        my @p = split( /\./, $ky );
        my $nk = pop(@p);
        $opts->{$nk} = delete $opts->{$ky};
    }
    my $check = $mon->check( $checks->{$path}, $opts );

    $mon->notify();
    if ( !$check ) {
        print "ERROR: [$path] " . $mon->error . "\n";
        $mon->error('');
    }
    else {
        print "Check to $path took: " . $check->{time} . "\n";
    }
}
